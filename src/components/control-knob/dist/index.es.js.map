{"version":3,"file":"index.es.js","sources":["../src/constants.ts","../src/utils.ts","../src/ControlKnob.vue"],"sourcesContent":["export const RADIUS = 40\nexport const IMAGE_VIEWBOX = 100\nexport const HALF_VIEWBOX = IMAGE_VIEWBOX / 2\nexport const MIN_ANGLE = 120\nexport const MAX_ANGLE = 420\n","import { MIN_ANGLE, MAX_ANGLE } from '@/constants'\n\nexport function degToRad(degrees: number) {\n  return (degrees * Math.PI) / 180\n}\n\nexport function leadingDebounce<A = unknown, R = void>(func: (args: A) => R, timeout = 13) {\n  let timer: NodeJS.Timeout | undefined\n  return (...args: A[]) => {\n    if (!timer) {\n      // @ts-expect-error FIXME: couldn't figure this one out!\n      func.apply(this, args)\n    } else {\n      clearTimeout(timer)\n    }\n    timer = setTimeout(() => {\n      timer = undefined\n    }, timeout)\n  }\n}\n\nexport function changeToControlAngle(startValue: number, change: number, shiftModifier = false) {\n  let controlYrange = 150\n  if (shiftModifier) {\n    controlYrange = controlYrange * 10\n  }\n  const controlRange = MAX_ANGLE - MIN_ANGLE\n  const pixelChange = controlRange / controlYrange\n  const controlAngleChange = change * pixelChange\n\n  return controlAngleChange\n}\n\nexport function controlAngleToValue(minValue: number, maxValue: number, controlAngle: number) {\n  let controlPercentage: number\n  const controlRange = MAX_ANGLE - MIN_ANGLE\n  const valueRange = maxValue - minValue\n  if (controlAngle === MIN_ANGLE) {\n    controlPercentage = 0\n  } else if (controlAngle === MAX_ANGLE) {\n    controlPercentage = 1\n  } else {\n    controlPercentage = (controlAngle - MIN_ANGLE) / controlRange\n  }\n  return minValue + valueRange * controlPercentage\n}\n\nexport function valueToControlAngle(minValue: number, maxValue: number, value: number) {\n  let valuePercentage: number\n  const controlRange = MAX_ANGLE - MIN_ANGLE\n  const valueRange = maxValue - minValue\n\n  if (value === minValue) {\n    valuePercentage = 0\n  } else if (value === maxValue) {\n    valuePercentage = 1\n  } else {\n    valuePercentage = (value - minValue) / valueRange\n  }\n  return MIN_ANGLE + controlRange * valuePercentage\n}\n","<script setup lang=\"ts\">\nimport { ref, computed, watch, onBeforeUnmount } from 'vue'\nimport {\n  degToRad,\n  leadingDebounce,\n  changeToControlAngle,\n  controlAngleToValue,\n  valueToControlAngle,\n} from '@/utils'\nimport { RADIUS, HALF_VIEWBOX, MIN_ANGLE, MAX_ANGLE } from '@/constants'\n\nconst knobElement = ref<HTMLElement>(0 as unknown as HTMLElement)\nconst controlAngle = ref(MIN_ANGLE)\n\ninterface Props {\n  modelValue: number\n  options?: {\n    imageSize?: number\n    minValue?: number\n    maxValue?: number\n    showTick?: boolean\n    showValue?: boolean\n    hideDefaultValue?: boolean\n    tickLength?: number\n    tickOffset?: number\n    tickStroke?: number\n    rimStroke?: number\n    valueArchStroke?: number\n    bgRadius?: number\n    wheelFactor?: number\n    keyFactor?: number\n    tabIndex?: number\n    ariaLabel?: string\n    valueTextX?: number\n    valueTextY?: number\n    svgClass?: string\n    bgClass?: string\n    rimClass?: string\n    valueArchClass?: string\n    tickClass?: string\n    valueTextClass?: string\n    passiveEvents?: boolean\n  }\n}\n\nconst props = defineProps<Props>()\nconst emit = defineEmits(['update:modelValue'])\n\nconst vModel = computed<number>({\n  get() {\n    return props.modelValue\n  },\n  set(value) {\n    emit('update:modelValue', value)\n  },\n})\n\nconst imageSize = props.options?.imageSize || 40\nconst knobMinValue = props.options?.minValue || 0\nconst knobMaxValue = props.options?.maxValue || 100\nconst showTick = props.options?.showTick === undefined ? true : props.options?.showTick\nconst showValue = props.options?.showValue === undefined ? true : props.options?.showTick\nconst hideDefaultValue =\n  props.options?.hideDefaultValue === undefined ? true : props.options?.hideDefaultValue\nconst tickLength = props.options?.tickLength || 18\nconst tickOffset = props.options?.tickOffset || 10\nconst tickStroke = props.options?.tickStroke || 3\nconst rimStroke = props.options?.rimStroke || 11\nconst valueArchStroke = props.options?.valueArchStroke || 11\nconst bgRadius = props.options?.bgRadius || 34\nconst wheelModifierFactor = props.options?.wheelFactor || 10\nconst keyModifierFactor = props.options?.keyFactor || 10\nconst tabIndex = props.options?.tabIndex || 0\nconst ariaLabel = props.options?.ariaLabel || 'Knob'\nconst valueTextX = props.options?.valueTextX || 50\nconst valueTextY = props.options?.valueTextY || 62\nconst svgClass = props.options?.svgClass || 'select-none'\nconst bgClass = props.options?.bgClass || 'text-[#868686]'\nconst rimClass = props.options?.rimClass || 'text-[#393939]'\nconst valueArchClass = props.options?.valueArchClass || 'text-[#53d769]'\nconst tickClass = props.options?.tickClass || 'text-black'\nconst valueTextClass =\n  props.options?.valueTextClass || 'text-gray-50 text-[30px] font-normal font-mono'\nconst passiveEvents =\n  props.options?.passiveEvents === undefined ? false : props.options?.passiveEvents\n\nconst startValue = vModel.value\n\nconst tickStartX = computed(() => {\n  return HALF_VIEWBOX + Math.cos(degToRad(controlAngle.value)) * (RADIUS - tickLength)\n})\n\nconst tickStartY = computed(() => {\n  return HALF_VIEWBOX + Math.sin(degToRad(controlAngle.value)) * (RADIUS - tickLength)\n})\n\nconst tickEndX = computed(() => {\n  return HALF_VIEWBOX + Math.cos(degToRad(controlAngle.value)) * (RADIUS - tickOffset)\n})\n\nconst tickEndY = computed(() => {\n  return HALF_VIEWBOX + Math.sin(degToRad(controlAngle.value)) * (RADIUS - tickOffset)\n})\n\nconst rimStartX = HALF_VIEWBOX + -0.5 * RADIUS\nconst rimStartY = HALF_VIEWBOX + Math.sin(degToRad(120)) * RADIUS\nconst rimEndX = HALF_VIEWBOX + 0.5 * RADIUS\nconst rimEndY = HALF_VIEWBOX + Math.sin(degToRad(420)) * RADIUS\n\nconst startRad = degToRad(120)\nconst currentValueRad = computed(() => degToRad(controlAngle.value))\nconst largeArch = computed(() => (Math.abs(startRad - currentValueRad.value) < Math.PI ? 0 : 1))\nconst sweep = ref(1)\n\nconst valueEndX = computed(() => 50 + Math.cos(degToRad(controlAngle.value)) * RADIUS)\nconst valueEndY = computed(() => 50 + Math.sin(degToRad(controlAngle.value)) * RADIUS)\n\nconst rim = `M ${rimStartX} ${rimStartY} A ${RADIUS} ${RADIUS} 0 1 1 ${rimEndX} ${rimEndY}`\nconst valueArch = computed(\n  () =>\n    `M ${rimStartX} ${rimStartY} A ${RADIUS} ${RADIUS} 0 ${largeArch.value} ${sweep.value} ${valueEndX.value} ${valueEndY.value}`\n)\n\nlet prevY = 0\nlet currentY = 0\nconst mouseIsDown = ref(false)\nconst mouseIsOver = ref(false)\nconst mouseMoved = ref(false)\nconst hasFocus = ref(false)\nconst shiftModifier = ref(false)\n\nconst downListener = (event: MouseEvent | TouchEvent) => {\n  mouseIsDown.value = true\n  mouseMoved.value = false\n  prevY = getEventY(event);\n  preventScrolling(event);\n}\n\n /** Gets the y coordinate associated with the event */\nfunction getEventY(event: TouchEvent | MouseEvent): number {\n  if (window.TouchEvent && event instanceof TouchEvent) {\n    return event.touches[0].pageY;\n  }\n  else if (event instanceof MouseEvent) {\n    return currentY = event.clientY\n  }\n  return 0;\n}\n\nfunction moveListener(event: TouchEvent | MouseEvent) {\n  mouseMoved.value = true\n  if (mouseIsDown.value) {\n    currentY = getEventY(event);\n    let direction: 'up' | 'down'\n    const curYchange = prevY - currentY\n\n    if (curYchange < 0) {\n      direction = 'down'\n    } else {\n      direction = 'up'\n    }\n\n    if (\n      prevY !== currentY &&\n      ((direction === 'up' && controlAngle.value < MAX_ANGLE) ||\n        (direction === 'down' && controlAngle.value > MIN_ANGLE))\n    ) {\n      const change = changeToControlAngle(prevY, curYchange, shiftModifier.value)\n\n      if (controlAngle.value + change < MIN_ANGLE) {\n        controlAngle.value = MIN_ANGLE\n      } else if (controlAngle.value + change > MAX_ANGLE) {\n        controlAngle.value = MAX_ANGLE\n      } else {\n        controlAngle.value += change\n      }\n\n      vModel.value = controlAngleToValue(knobMinValue, knobMaxValue, controlAngle.value)\n    }\n    prevY = currentY\n  }\n}\n\nconst debouncedMoveListener = leadingDebounce(moveListener)\n\n/** According to the chosen option, prevents propagation of the event.\n * @remarks If set, keeps page from scrolling while handling the knob\n */\nfunction preventScrolling(event: TouchEvent | MouseEvent | KeyboardEvent): void {\n  if (passiveEvents === false) {\n    event.preventDefault()\n    event.stopPropagation()\n  }\n}\n\nconst upListener = () => {\n  mouseIsDown.value = false\n}\n\nfunction resetValue() {\n  controlAngle.value = MIN_ANGLE\n}\n\nfunction changeValue(change: number) {\n  if (change > controlAngle.value) {\n    if (change < MAX_ANGLE) {\n      controlAngle.value = change\n    } else {\n      controlAngle.value = MAX_ANGLE\n    }\n  }\n\n  if (change < controlAngle.value) {\n    if (change < controlAngle.value && change > MIN_ANGLE) {\n      controlAngle.value = change\n    } else {\n      controlAngle.value = MIN_ANGLE\n    }\n  }\n  vModel.value = controlAngleToValue(knobMinValue, knobMaxValue, controlAngle.value)\n}\n\nfunction keyDownListener(event: KeyboardEvent) {\n  //Update the shift modifier here already, otherwise the precise mode is not triggered properly\n  if (event.key === 'Shift') {\n    shiftModifier.value = true\n  }\n\n  if (hasFocus.value && (event.key === 'ArrowUp' || event.key === 'ArrowDown')) {\n    preventScrolling(event)\n  }\n}\n\nfunction keyUpListener(event: KeyboardEvent) {\n  if (event.key === 'Shift') {\n    shiftModifier.value = false\n  }\n\n  let newValue: number\n  const keyModifier = shiftModifier.value ? 1 : keyModifierFactor\n  if (hasFocus.value && event.key === 'ArrowUp') {\n    newValue = controlAngle.value + 1 * keyModifier\n    changeValue(newValue)\n  }\n\n  if (hasFocus.value && event.key === 'ArrowDown') {\n    newValue = controlAngle.value - 1 * keyModifier\n    changeValue(newValue)\n  }\n}\n\nfunction wheelListener(event: WheelEvent) {\n  let newValue: number\n  const wheelModifier = event.shiftKey ? 1 : wheelModifierFactor\n  if ((!event.shiftKey && event.deltaY < 0) || (event.shiftKey && event.deltaX < 0)) {\n    newValue = controlAngle.value + 1 * wheelModifier\n  } else {\n    newValue = controlAngle.value - 1 * wheelModifier\n  }\n  changeValue(newValue)\n  preventScrolling(event)\n}\n\nfunction mouseOverHandler() {\n  mouseIsOver.value = true\n}\n\nfunction mouseOutHandler() {\n  mouseIsOver.value = false\n}\n\nwatch(\n  () => knobElement.value,\n  (element, oldElement) => {\n    if (element && !oldElement) {\n      element.addEventListener('mousedown', downListener)\n      element.addEventListener('touchstart', downListener, { passive: passiveEvents })\n      element.addEventListener('wheel', wheelListener, { passive: passiveEvents })\n      element.addEventListener('mouseenter', mouseOverHandler)\n      element.addEventListener('mouseleave', mouseOutHandler)\n      document.addEventListener('mouseup', upListener)\n      document.addEventListener('touchend', upListener)\n      document.addEventListener('mousemove', debouncedMoveListener)\n      document.addEventListener('touchmove', debouncedMoveListener)\n      document.addEventListener('keydown', keyDownListener)\n      document.addEventListener('keyup', keyUpListener)\n\n      const controlValue = valueToControlAngle(knobMinValue, knobMaxValue, props.modelValue)\n      controlAngle.value = controlValue\n    }\n  }\n)\n\nwatch(\n  () => props.modelValue,\n  (value) => {\n    if (mouseIsOver.value === false && mouseIsDown.value === false && hasFocus.value === false) {\n      // console.log('propvalue changed for ', knobElement.value.attributes.id)\n      const controlValue = valueToControlAngle(knobMinValue, knobMaxValue, value)\n      controlAngle.value = controlValue\n    }\n  }\n)\n\nonBeforeUnmount(() => {\n  knobElement.value.removeEventListener('mousedown', downListener)\n  knobElement.value.removeEventListener('touchstart', downListener)\n  knobElement.value.removeEventListener('wheel', wheelListener)\n  knobElement.value.removeEventListener('mouseenter', mouseOverHandler)\n  knobElement.value.removeEventListener('mouseleave', mouseOutHandler)\n  document.removeEventListener('mouseup', upListener)\n  document.removeEventListener('touchend', upListener)\n  document.removeEventListener('mousemove', debouncedMoveListener)\n  document.removeEventListener('touchmove', debouncedMoveListener)\n  document.removeEventListener('keydown', keyDownListener)\n  document.removeEventListener('keyup', keyUpListener)\n})\n</script>\n<template>\n  <svg\n    :width=\"imageSize\"\n    :height=\"imageSize\"\n    viewBox=\"0 0 100 100\"\n    ref=\"knobElement\"\n    role=\"slider\"\n    :aria-label=\"ariaLabel\"\n    :aria-valuemin=\"knobMinValue\"\n    :aria-valuemax=\"knobMaxValue\"\n    :aria-valuenow=\"vModel\"\n    :tabindex=\"tabIndex\"\n    :class=\"svgClass\"\n    @click.alt=\"resetValue\"\n    @focus=\"hasFocus = true\"\n    @blur=\"hasFocus = false\"\n  >\n    <circle\n      :cx=\"HALF_VIEWBOX\"\n      :cy=\"HALF_VIEWBOX\"\n      :r=\"bgRadius\"\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      :class=\"bgClass\"\n      :stroke-width=\"1\"\n    />\n\n    <path\n      :d=\"rim\"\n      :stroke-width=\"rimStroke\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      :class=\"rimClass\"\n    ></path>\n\n    <path\n      v-if=\"controlAngle > 120\"\n      :d=\"valueArch\"\n      :stroke-width=\"valueArchStroke\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      :class=\"valueArchClass\"\n    ></path>\n\n    <line\n      v-if=\"showTick\"\n      :x1=\"tickStartX\"\n      :y1=\"tickStartY\"\n      :x2=\"tickEndX\"\n      :y2=\"tickEndY\"\n      stroke=\"currentColor\"\n      :stroke-width=\"tickStroke\"\n      :class=\"tickClass\"\n    />\n\n    <text\n      v-if=\"showValue && (!hideDefaultValue || startValue !== vModel)\"\n      :x=\"valueTextX\"\n      :y=\"valueTextY\"\n      text-anchor=\"middle\"\n      fill=\"currentColor\"\n      :class=\"valueTextClass\"\n    >\n      {{ Math.ceil(vModel) }}\n    </text>\n  </svg>\n</template>\n"],"names":[],"mappings":"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"}