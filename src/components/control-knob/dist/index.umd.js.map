{"version":3,"file":"index.umd.js","sources":["../src/utils.ts","../src/ControlKnob.vue"],"sourcesContent":["import { MIN_ANGLE, MAX_ANGLE } from '@/constants'\n\nexport function degToRad(degrees: number) {\n  return (degrees * Math.PI) / 180\n}\n\nexport function leadingDebounce<A = unknown, R = void>(func: (args: A) => R, timeout = 13) {\n  let timer: NodeJS.Timeout | undefined\n  return (...args: A[]) => {\n    if (!timer) {\n      // @ts-expect-error FIXME: couldn't figure this one out!\n      func.apply(this, args)\n    } else {\n      clearTimeout(timer)\n    }\n    timer = setTimeout(() => {\n      timer = undefined\n    }, timeout)\n  }\n}\n\nexport function changeToControlAngle(startValue: number, change: number, shiftModifier = false) {\n  let controlYrange = 150\n  if (shiftModifier) {\n    controlYrange = controlYrange * 10\n  }\n  const controlRange = MAX_ANGLE - MIN_ANGLE\n  const pixelChange = controlRange / controlYrange\n  const controlAngleChange = change * pixelChange\n\n  return controlAngleChange\n}\n\nexport function controlAngleToValue(minValue: number, maxValue: number, controlAngle: number) {\n  let controlPercentage: number\n  const controlRange = MAX_ANGLE - MIN_ANGLE\n  const valueRange = maxValue - minValue\n  if (controlAngle === MIN_ANGLE) {\n    controlPercentage = 0\n  } else if (controlAngle === MAX_ANGLE) {\n    controlPercentage = 1\n  } else {\n    controlPercentage = (controlAngle - MIN_ANGLE) / controlRange\n  }\n  return minValue + valueRange * controlPercentage\n}\n\nexport function valueToControlAngle(minValue: number, maxValue: number, value: number) {\n  let valuePercentage: number\n  const controlRange = MAX_ANGLE - MIN_ANGLE\n  const valueRange = maxValue - minValue\n\n  if (value === minValue) {\n    valuePercentage = 0\n  } else if (value === maxValue) {\n    valuePercentage = 1\n  } else {\n    valuePercentage = (value - minValue) / valueRange\n  }\n  return MIN_ANGLE + controlRange * valuePercentage\n}\n","<script setup lang=\"ts\">\nimport { ref, computed, watch, onBeforeUnmount } from 'vue'\nimport {\n  degToRad,\n  leadingDebounce,\n  changeToControlAngle,\n  controlAngleToValue,\n  valueToControlAngle,\n} from '@/utils'\nimport { RADIUS, HALF_VIEWBOX, MIN_ANGLE, MAX_ANGLE } from '@/constants'\n\nconst knobElement = ref<HTMLElement>(0 as unknown as HTMLElement)\nconst controlAngle = ref(MIN_ANGLE)\n\ninterface Props {\n  modelValue: number\n  options?: {\n    imageSize?: number\n    minValue?: number\n    maxValue?: number\n    showTick?: boolean\n    showValue?: boolean\n    hideDefaultValue?: boolean\n    tickLength?: number\n    tickOffset?: number\n    tickStroke?: number\n    rimStroke?: number\n    valueArchStroke?: number\n    bgRadius?: number\n    wheelFactor?: number\n    keyFactor?: number\n    tabIndex?: number\n    ariaLabel?: string\n    valueTextX?: number\n    valueTextY?: number\n    svgClass?: string\n    bgClass?: string\n    rimClass?: string\n    valueArchClass?: string\n    tickClass?: string\n    valueTextClass?: string\n    passiveEvents?: boolean\n  }\n}\n\nconst props = defineProps<Props>()\nconst emit = defineEmits(['update:modelValue'])\n\nconst vModel = computed<number>({\n  get() {\n    return props.modelValue\n  },\n  set(value) {\n    emit('update:modelValue', value)\n  },\n})\n\nconst imageSize = props.options?.imageSize || 40\nconst knobMinValue = props.options?.minValue || 0\nconst knobMaxValue = props.options?.maxValue || 100\nconst showTick = props.options?.showTick === undefined ? true : props.options?.showTick\nconst showValue = props.options?.showValue === undefined ? true : props.options?.showTick\nconst hideDefaultValue =\n  props.options?.hideDefaultValue === undefined ? true : props.options?.hideDefaultValue\nconst tickLength = props.options?.tickLength || 18\nconst tickOffset = props.options?.tickOffset || 10\nconst tickStroke = props.options?.tickStroke || 3\nconst rimStroke = props.options?.rimStroke || 11\nconst valueArchStroke = props.options?.valueArchStroke || 11\nconst bgRadius = props.options?.bgRadius || 34\nconst wheelModifierFactor = props.options?.wheelFactor || 10\nconst keyModifierFactor = props.options?.keyFactor || 10\nconst tabIndex = props.options?.tabIndex || 0\nconst ariaLabel = props.options?.ariaLabel || 'Knob'\nconst valueTextX = props.options?.valueTextX || 50\nconst valueTextY = props.options?.valueTextY || 62\nconst svgClass = props.options?.svgClass || 'select-none'\nconst bgClass = props.options?.bgClass || 'text-[#868686]'\nconst rimClass = props.options?.rimClass || 'text-[#393939]'\nconst valueArchClass = props.options?.valueArchClass || 'text-[#53d769]'\nconst tickClass = props.options?.tickClass || 'text-black'\nconst valueTextClass =\n  props.options?.valueTextClass || 'text-gray-50 text-[30px] font-normal font-mono'\nconst passiveEvents =\n  props.options?.passiveEvents === undefined ? false : props.options?.passiveEvents\n\nconst startValue = vModel.value\n\nconst tickStartX = computed(() => {\n  return HALF_VIEWBOX + Math.cos(degToRad(controlAngle.value)) * (RADIUS - tickLength)\n})\n\nconst tickStartY = computed(() => {\n  return HALF_VIEWBOX + Math.sin(degToRad(controlAngle.value)) * (RADIUS - tickLength)\n})\n\nconst tickEndX = computed(() => {\n  return HALF_VIEWBOX + Math.cos(degToRad(controlAngle.value)) * (RADIUS - tickOffset)\n})\n\nconst tickEndY = computed(() => {\n  return HALF_VIEWBOX + Math.sin(degToRad(controlAngle.value)) * (RADIUS - tickOffset)\n})\n\nconst rimStartX = HALF_VIEWBOX + -0.5 * RADIUS\nconst rimStartY = HALF_VIEWBOX + Math.sin(degToRad(120)) * RADIUS\nconst rimEndX = HALF_VIEWBOX + 0.5 * RADIUS\nconst rimEndY = HALF_VIEWBOX + Math.sin(degToRad(420)) * RADIUS\n\nconst startRad = degToRad(120)\nconst currentValueRad = computed(() => degToRad(controlAngle.value))\nconst largeArch = computed(() => (Math.abs(startRad - currentValueRad.value) < Math.PI ? 0 : 1))\nconst sweep = ref(1)\n\nconst valueEndX = computed(() => 50 + Math.cos(degToRad(controlAngle.value)) * RADIUS)\nconst valueEndY = computed(() => 50 + Math.sin(degToRad(controlAngle.value)) * RADIUS)\n\nconst rim = `M ${rimStartX} ${rimStartY} A ${RADIUS} ${RADIUS} 0 1 1 ${rimEndX} ${rimEndY}`\nconst valueArch = computed(\n  () =>\n    `M ${rimStartX} ${rimStartY} A ${RADIUS} ${RADIUS} 0 ${largeArch.value} ${sweep.value} ${valueEndX.value} ${valueEndY.value}`\n)\n\nlet prevY = 0\nlet currentY = 0\nconst mouseIsDown = ref(false)\nconst mouseIsOver = ref(false)\nconst mouseMoved = ref(false)\nconst hasFocus = ref(false)\nconst shiftModifier = ref(false)\n\nconst downListener = (event: MouseEvent | TouchEvent) => {\n  mouseIsDown.value = true\n  mouseMoved.value = false\n  prevY = getEventY(event);\n  preventScrolling(event);\n}\n\n /** Gets the y coordinate associated with the event */\nfunction getEventY(event: TouchEvent | MouseEvent): number {\n  if (window.TouchEvent && event instanceof TouchEvent) {\n    return event.touches[0].pageY;\n  }\n  else if (event instanceof MouseEvent) {\n    return currentY = event.clientY\n  }\n  return 0;\n}\n\nfunction moveListener(event: TouchEvent | MouseEvent) {\n  mouseMoved.value = true\n  if (mouseIsDown.value) {\n    currentY = getEventY(event);\n    let direction: 'up' | 'down'\n    const curYchange = prevY - currentY\n\n    if (curYchange < 0) {\n      direction = 'down'\n    } else {\n      direction = 'up'\n    }\n\n    if (\n      prevY !== currentY &&\n      ((direction === 'up' && controlAngle.value < MAX_ANGLE) ||\n        (direction === 'down' && controlAngle.value > MIN_ANGLE))\n    ) {\n      const change = changeToControlAngle(prevY, curYchange, shiftModifier.value)\n\n      if (controlAngle.value + change < MIN_ANGLE) {\n        controlAngle.value = MIN_ANGLE\n      } else if (controlAngle.value + change > MAX_ANGLE) {\n        controlAngle.value = MAX_ANGLE\n      } else {\n        controlAngle.value += change\n      }\n\n      vModel.value = controlAngleToValue(knobMinValue, knobMaxValue, controlAngle.value)\n    }\n    prevY = currentY\n  }\n}\n\nconst debouncedMoveListener = leadingDebounce(moveListener)\n\n/** According to the chosen option, prevents propagation of the event.\n * @remarks If set, keeps page from scrolling while handling the knob\n */\nfunction preventScrolling(event: TouchEvent | MouseEvent | KeyboardEvent): void {\n  if (passiveEvents === false) {\n    event.preventDefault()\n    event.stopPropagation()\n  }\n}\n\nconst upListener = () => {\n  mouseIsDown.value = false\n}\n\nfunction resetValue() {\n  controlAngle.value = MIN_ANGLE\n}\n\nfunction changeValue(change: number) {\n  if (change > controlAngle.value) {\n    if (change < MAX_ANGLE) {\n      controlAngle.value = change\n    } else {\n      controlAngle.value = MAX_ANGLE\n    }\n  }\n\n  if (change < controlAngle.value) {\n    if (change < controlAngle.value && change > MIN_ANGLE) {\n      controlAngle.value = change\n    } else {\n      controlAngle.value = MIN_ANGLE\n    }\n  }\n  vModel.value = controlAngleToValue(knobMinValue, knobMaxValue, controlAngle.value)\n}\n\nfunction keyDownListener(event: KeyboardEvent) {\n  //Update the shift modifier here already, otherwise the precise mode is not triggered properly\n  if (event.key === 'Shift') {\n    shiftModifier.value = true\n  }\n\n  if (hasFocus.value && (event.key === 'ArrowUp' || event.key === 'ArrowDown')) {\n    preventScrolling(event)\n  }\n}\n\nfunction keyUpListener(event: KeyboardEvent) {\n  if (event.key === 'Shift') {\n    shiftModifier.value = false\n  }\n\n  let newValue: number\n  const keyModifier = shiftModifier.value ? 1 : keyModifierFactor\n  if (hasFocus.value && event.key === 'ArrowUp') {\n    newValue = controlAngle.value + 1 * keyModifier\n    changeValue(newValue)\n  }\n\n  if (hasFocus.value && event.key === 'ArrowDown') {\n    newValue = controlAngle.value - 1 * keyModifier\n    changeValue(newValue)\n  }\n}\n\nfunction wheelListener(event: WheelEvent) {\n  let newValue: number\n  const wheelModifier = event.shiftKey ? 1 : wheelModifierFactor\n  if ((!event.shiftKey && event.deltaY < 0) || (event.shiftKey && event.deltaX < 0)) {\n    newValue = controlAngle.value + 1 * wheelModifier\n  } else {\n    newValue = controlAngle.value - 1 * wheelModifier\n  }\n  changeValue(newValue)\n  preventScrolling(event)\n}\n\nfunction mouseOverHandler() {\n  mouseIsOver.value = true\n}\n\nfunction mouseOutHandler() {\n  mouseIsOver.value = false\n}\n\nwatch(\n  () => knobElement.value,\n  (element, oldElement) => {\n    if (element && !oldElement) {\n      element.addEventListener('mousedown', downListener)\n      element.addEventListener('touchstart', downListener, { passive: passiveEvents })\n      element.addEventListener('wheel', wheelListener, { passive: passiveEvents })\n      element.addEventListener('mouseenter', mouseOverHandler)\n      element.addEventListener('mouseleave', mouseOutHandler)\n      document.addEventListener('mouseup', upListener)\n      document.addEventListener('touchend', upListener)\n      document.addEventListener('mousemove', debouncedMoveListener)\n      document.addEventListener('touchmove', debouncedMoveListener)\n      document.addEventListener('keydown', keyDownListener)\n      document.addEventListener('keyup', keyUpListener)\n\n      const controlValue = valueToControlAngle(knobMinValue, knobMaxValue, props.modelValue)\n      controlAngle.value = controlValue\n    }\n  }\n)\n\nwatch(\n  () => props.modelValue,\n  (value) => {\n    if (mouseIsOver.value === false && mouseIsDown.value === false && hasFocus.value === false) {\n      // console.log('propvalue changed for ', knobElement.value.attributes.id)\n      const controlValue = valueToControlAngle(knobMinValue, knobMaxValue, value)\n      controlAngle.value = controlValue\n    }\n  }\n)\n\nonBeforeUnmount(() => {\n  knobElement.value.removeEventListener('mousedown', downListener)\n  knobElement.value.removeEventListener('touchstart', downListener)\n  knobElement.value.removeEventListener('wheel', wheelListener)\n  knobElement.value.removeEventListener('mouseenter', mouseOverHandler)\n  knobElement.value.removeEventListener('mouseleave', mouseOutHandler)\n  document.removeEventListener('mouseup', upListener)\n  document.removeEventListener('touchend', upListener)\n  document.removeEventListener('mousemove', debouncedMoveListener)\n  document.removeEventListener('touchmove', debouncedMoveListener)\n  document.removeEventListener('keydown', keyDownListener)\n  document.removeEventListener('keyup', keyUpListener)\n})\n</script>\n<template>\n  <svg\n    :width=\"imageSize\"\n    :height=\"imageSize\"\n    viewBox=\"0 0 100 100\"\n    ref=\"knobElement\"\n    role=\"slider\"\n    :aria-label=\"ariaLabel\"\n    :aria-valuemin=\"knobMinValue\"\n    :aria-valuemax=\"knobMaxValue\"\n    :aria-valuenow=\"vModel\"\n    :tabindex=\"tabIndex\"\n    :class=\"svgClass\"\n    @click.alt=\"resetValue\"\n    @focus=\"hasFocus = true\"\n    @blur=\"hasFocus = false\"\n  >\n    <circle\n      :cx=\"HALF_VIEWBOX\"\n      :cy=\"HALF_VIEWBOX\"\n      :r=\"bgRadius\"\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      :class=\"bgClass\"\n      :stroke-width=\"1\"\n    />\n\n    <path\n      :d=\"rim\"\n      :stroke-width=\"rimStroke\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      :class=\"rimClass\"\n    ></path>\n\n    <path\n      v-if=\"controlAngle > 120\"\n      :d=\"valueArch\"\n      :stroke-width=\"valueArchStroke\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      :class=\"valueArchClass\"\n    ></path>\n\n    <line\n      v-if=\"showTick\"\n      :x1=\"tickStartX\"\n      :y1=\"tickStartY\"\n      :x2=\"tickEndX\"\n      :y2=\"tickEndY\"\n      stroke=\"currentColor\"\n      :stroke-width=\"tickStroke\"\n      :class=\"tickClass\"\n    />\n\n    <text\n      v-if=\"showValue && (!hideDefaultValue || startValue !== vModel)\"\n      :x=\"valueTextX\"\n      :y=\"valueTextY\"\n      text-anchor=\"middle\"\n      fill=\"currentColor\"\n      :class=\"valueTextClass\"\n    >\n      {{ Math.ceil(vModel) }}\n    </text>\n  </svg>\n</template>\n"],"names":["ref","computed"],"mappings":"qRAEyB,EAAiB,OAChC,GAAU,KAAK,GAAM,gBAGwB,EAAsB,EAAU,GAAI,IACrF,SACG,IAAI,IAAc,CAClB,eAIU,KAFR,MAAM,KAAM,KAIX,WAAW,IAAM,GACf,QACP,gBAI8B,EAAoB,EAAgB,EAAgB,GAAO,IAC1F,GAAgB,IAChB,MACc,EAAgB,SAG5B,GAAc,AADC,KAAY,KACE,QACR,GAAS,aAKF,EAAkB,EAAkB,EAAsB,IACxF,QAEE,GAAa,EAAW,QAC1B,KAAiB,MACC,EACX,IAAiB,MACN,OAEgB,KAAa,IAE5C,EAAW,EAAa,aAGG,EAAkB,EAAkB,EAAe,IACjF,QAEE,GAAa,EAAW,QAE1B,KAAU,IACM,EACT,IAAU,IACD,OAES,GAAY,EAElC,IAAY,IAAe,yaChD9B,EAAcA,MAAiB,GAC/B,EAAeA,MAAI,KAoCnB,EAASC,WAAiB,CAC9B,KAAM,OACG,GAAM,YAEf,IAAI,EAAO,GACJ,oBAAqB,MAIxB,EAAY,MAAM,UAAN,cAAe,YAAa,GACxC,EAAe,MAAM,UAAN,cAAe,WAAY,EAC1C,EAAe,MAAM,UAAN,cAAe,WAAY,IAC1C,GAAW,MAAM,UAAN,cAAe,YAAa,OAAY,GAAO,KAAM,UAAN,cAAe,SACzE,GAAY,MAAM,UAAN,cAAe,aAAc,OAAY,GAAO,KAAM,UAAN,cAAe,SAC3E,GACJ,MAAM,UAAN,cAAe,oBAAqB,OAAY,GAAO,KAAM,UAAN,cAAe,iBAClE,EAAa,MAAM,UAAN,cAAe,aAAc,GAC1C,EAAa,MAAM,UAAN,cAAe,aAAc,GAC1C,GAAa,MAAM,UAAN,cAAe,aAAc,EAC1C,GAAY,MAAM,UAAN,cAAe,YAAa,GACxC,GAAkB,OAAM,UAAN,eAAe,kBAAmB,GACpD,GAAW,OAAM,UAAN,eAAe,WAAY,GACtC,GAAsB,OAAM,UAAN,eAAe,cAAe,GACpD,GAAoB,OAAM,UAAN,eAAe,YAAa,GAChD,GAAW,OAAM,UAAN,eAAe,WAAY,EACtC,GAAY,OAAM,UAAN,eAAe,YAAa,OACxC,GAAa,OAAM,UAAN,eAAe,aAAc,GAC1C,GAAa,OAAM,UAAN,eAAe,aAAc,GAC1C,GAAW,OAAM,UAAN,eAAe,WAAY,cACtC,GAAU,OAAM,UAAN,eAAe,UAAW,iBACpC,GAAW,OAAM,UAAN,eAAe,WAAY,iBACtC,GAAiB,OAAM,UAAN,eAAe,iBAAkB,iBAClD,GAAY,OAAM,UAAN,eAAe,YAAa,aACxC,GACJ,OAAM,UAAN,eAAe,iBAAkB,iDAC7B,EACJ,OAAM,UAAN,eAAe,iBAAkB,OAAY,GAAQ,MAAM,UAAN,eAAe,cAEhE,GAAa,EAAO,MAEpB,GAAaA,WAAS,IACnB,GAAe,KAAK,IAAI,EAAS,EAAa,YAAoB,IAGrE,GAAaA,WAAS,IACnB,GAAe,KAAK,IAAI,EAAS,EAAa,YAAoB,IAGrE,GAAWA,WAAS,IACjB,GAAe,KAAK,IAAI,EAAS,EAAa,YAAoB,IAGrE,GAAWA,WAAS,IACjB,GAAe,KAAK,IAAI,EAAS,EAAa,YAAoB,IAGrE,EAAY,GAAe,IAAO,GAClC,EAAY,GAAe,KAAK,IAAI,EAAS,MAAQ,GACrD,GAAU,GAAe,GAAM,GAC/B,GAAU,GAAe,KAAK,IAAI,EAAS,MAAQ,GAEnD,GAAW,EAAS,KACpB,GAAkBA,WAAS,IAAM,EAAS,EAAa,QACvD,GAAYA,WAAS,IAAO,KAAK,IAAI,GAAW,GAAgB,OAAS,KAAK,GAAK,EAAI,GACvF,GAAQD,MAAI,GAEZ,GAAYC,WAAS,IAAM,GAAK,KAAK,IAAI,EAAS,EAAa,QAAU,IACzE,GAAYA,WAAS,IAAM,GAAK,KAAK,IAAI,EAAS,EAAa,QAAU,IAEzE,GAAM,KAAK,KAAa,OAAe,MAAU,YAAgB,MAAW,KAC5E,GAAYA,WAChB,IACE,KAAK,KAAa,OAAe,MAAU,QAAY,GAAU,SAAS,GAAM,SAAS,GAAU,SAAS,GAAU,YAGtH,GAAQ,EACR,EAAW,OACT,GAAcD,MAAI,IAClB,EAAcA,MAAI,IAClB,EAAaA,MAAI,IACjB,EAAWA,MAAI,IACf,EAAgBA,MAAI,IAEpB,EAAe,AAAC,GAAmC,GAC3C,MAAQ,KACT,MAAQ,KACX,EAAU,KACD,eAIA,EAAwC,OACrD,QAAO,YAAc,YAAiB,YACjC,EAAM,QAAQ,GAAG,MAEjB,YAAiB,YACjB,EAAW,EAAM,QAEnB,cAGa,EAAgC,MACzC,MAAQ,GACf,EAAY,MAAO,GACV,EAAU,MACjB,QACE,GAAa,EAAQ,KAEvB,EAAa,IACH,SAEA,KAIZ,IAAU,QACM,MAAQ,EAAa,MAAQ,KAC1C,IAAc,QAAU,EAAa,MAAQ,KAChD,MACM,GAAS,GAAqB,EAAO,EAAY,EAAc,OAEjE,EAAa,MAAQ,EAAS,MACnB,MAAQ,IACZ,EAAa,MAAQ,EAAS,MAC1B,MAAQ,MAER,OAAS,IAGjB,MAAQ,EAAoB,EAAc,EAAc,EAAa,SAEtE,QAIN,GAAwB,GAAgB,eAKpB,EAAsD,CAC1E,IAAkB,OACd,mBACA,wBAIJ,GAAa,IAAM,GACX,MAAQ,iBAGA,GACP,MAAQ,eAGF,EAAgB,CAC/B,EAAS,EAAa,QACpB,EAAS,MACE,MAAQ,IAER,MAAQ,KAIrB,EAAS,EAAa,QACpB,EAAS,EAAa,OAAS,EAAS,MAC7B,MAAQ,IAER,MAAQ,OAGlB,MAAQ,EAAoB,EAAc,EAAc,EAAa,kBAGrD,EAAsB,CAEzC,EAAM,MAAQ,YACF,MAAQ,IAGpB,EAAS,UAAgB,MAAQ,WAAa,EAAM,MAAQ,gBAC7C,cAIE,EAAsB,CACvC,EAAM,MAAQ,YACF,MAAQ,OAGpB,QACE,GAAc,EAAc,MAAQ,EAAI,GAC1C,EAAS,OAAS,EAAM,MAAQ,cACvB,EAAa,MAAQ,EAAI,IACxB,IAGV,EAAS,OAAS,EAAM,MAAQ,gBACvB,EAAa,MAAQ,EAAI,IACxB,eAIO,EAAmB,IACpC,QACE,GAAgB,EAAM,SAAW,EAAI,GACtC,CAAC,EAAM,UAAY,EAAM,OAAS,GAAO,EAAM,UAAY,EAAM,OAAS,IAClE,EAAa,MAAQ,EAAI,IAEzB,EAAa,MAAQ,EAAI,IAE1B,KACK,eAGS,GACd,MAAQ,eAGK,GACb,MAAQ,kBAIpB,IAAM,EAAY,MAClB,CAAC,EAAS,IAAe,IACnB,GAAW,CAAC,EAAY,GAClB,iBAAiB,YAAa,KAC9B,iBAAiB,aAAc,EAAc,CAAE,QAAS,MACxD,iBAAiB,QAAS,EAAe,CAAE,QAAS,MACpD,iBAAiB,aAAc,KAC/B,iBAAiB,aAAc,YAC9B,iBAAiB,UAAW,YAC5B,iBAAiB,WAAY,YAC7B,iBAAiB,YAAa,YAC9B,iBAAiB,YAAa,YAC9B,iBAAiB,UAAW,YAC5B,iBAAiB,QAAS,QAE7B,GAAe,EAAoB,EAAc,EAAc,EAAM,cAC9D,MAAQ,aAMzB,IAAM,EAAM,WACZ,AAAC,GAAU,IACL,EAAY,QAAU,IAAS,EAAY,QAAU,IAAS,EAAS,QAAU,GAAO,MAEpF,GAAe,EAAoB,EAAc,EAAc,KACxD,MAAQ,uBAKX,IAAM,GACR,MAAM,oBAAoB,YAAa,KACvC,MAAM,oBAAoB,aAAc,KACxC,MAAM,oBAAoB,QAAS,KACnC,MAAM,oBAAoB,aAAc,KACxC,MAAM,oBAAoB,aAAc,YAC3C,oBAAoB,UAAW,YAC/B,oBAAoB,WAAY,YAChC,oBAAoB,YAAa,YACjC,oBAAoB,YAAa,YACjC,oBAAoB,UAAW,YAC/B,oBAAoB,QAAS"}